// Import nessisary libraries
#include <WiFi.h>
#include <HTTPClient.h>
#include <Wire.h>
#include <SPI.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BME280.h>

// Set our sealevel pressure
#define SEALEVELPRESSURE_HPA (1013.25)


const char* ssid = "wifi name";
const char* password = "wifi pass";


String serverName = "https://api.thingspeak.com/update?api_key=write api key";


unsigned long lastTime = 0;
unsigned long timerDelay = 60000;

Adafruit_BME280 bme;


void setup() {
  Serial.begin(115200); 


  initBme280(); // Initialize the bme280


  WiFi.begin(ssid, password);
  Serial.println("Connecting");
  while(WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to WiFi network with IP Address: ");
  Serial.println(WiFi.localIP());
}


void loop() {
  if ((millis() - lastTime) > timerDelay) {
    if(WiFi.status()== WL_CONNECTED){
// Read data from our bme280 object and pass it to our sendData function 
sendData(bme.readTemperature(), bme.readPressure() / 100.0F, bme.readAltitude(SEALEVELPRESSURE_HPA), bme.readHumidity());
    }
    else {
      Serial.println("WiFi Disconnected");
    }
    lastTime = millis();
  }
}


void sendData(double temp, double pres, double alt, double hum){
    HTTPClient http;


    String url = serverName + "&field1=" + temp + "&field2=" + pres + "&field3=" + alt + "&field4=" + hum;
      
    http.begin(url.c_str());
      
    int httpResponseCode = http.GET();
      
    if (httpResponseCode > 0){
      Serial.print("HTTP Response code: ");
      Serial.println(httpResponseCode);
    }else{
      Serial.print("Error code: ");
      Serial.println(httpResponseCode);
    }
    http.end();
}


void initBme280(){
  unsigned status;
    
  status = bme.begin();  
  if (!status) {
      Serial.println("Could not find a valid BME280 sensor, check wiring, address, sensor ID!");
      Serial.print("SensorID was: 0x"); Serial.println(bme.sensorID(),16);
      Serial.print("        ID of 0xFF probably means a bad address, a BMP 180 or BMP 085\n");
      Serial.print("   ID of 0x56-0x58 represents a BMP 280,\n");
      Serial.print("        ID of 0x60 represents a BME 280.\n");
      Serial.print("        ID of 0x61 represents a BME 680.\n");
      while (1) delay(10);
  }
  Serial.println("BME280 Initialized");
  Serial.println();
}
